{"version":3,"sources":["store/constants/index.ts","components/card/card-styled.tsx","components/card/index.tsx","components/searchbar/index.tsx","store/actions/index.ts","components/details/details-styled.tsx","assets/close.png","components/details/index.tsx","pages/home/home-styled.components.tsx","pages/home/index.tsx","reportWebVitals.ts","store/reducers/index.ts","store/sagas/utils.ts","store/sagas/index.ts","store/index.ts","index.tsx"],"names":["APP_CONSTANTS","CardWrapper","styled","div","CardContent","CardPoster","img","CardInfoWrapper","CardInfoLink","a","Card","movie","cardClicked","className","id","imdbID","src","Poster","alt","onClick","Title","Year","SearchBar","onSearch","React","useState","value","setValue","type","placeholder","onChange","event","String","target","onKeyPress","key","trim","handleKeyPress","loadMoviesList","searchCriteria","page","paginatedRequest","LOAD_MOVIES_LIST","payload","updateMoviesList","data","UPDATE_MOVIES_LIST","updateMoviesListPaginated","UPDATE_MOVIES_LIST_PAGINATED","updateMovieDetail","UPDATE_MOVIE_DETAILS","updateTotalResult","count","UPDATE_TOTAL_MOVIES","DetailsWrapper","SidebarWrapper","aside","ContentWrapper","article","ImageWrapper","InfoWrapper","InfoContent","span","BackIcon","BackIconImg","DetailsPage","closeDetails","backIcon","Director","Actors","Writer","Language","Country","Genre","Rated","Released","Runtime","imdbRating","BoxOffice","Production","Website","Plot","ScrolableBody","Home","dispatch","useDispatch","selectedMovie","setSelectedMovie","moviesList","useSelector","state","movieDetails","selectedMovieDetails","pageNumber","totalResults","useEffect","RESET_MOVIE_LIST","UPDATE_SEARCH_CRITERIA","updateSearchCriteria","length","dataLength","next","UPDATE_PAGE_NUMBER","hasMore","inverse","loader","scrollableTarget","map","LOAD_MOVIES_DETAILS_BY_ID","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","resetMoviesList","refreshMoviesList","action","addPagedMovieListData","appendedList","concat","updateMovieDetails","updatePageNumber","extractJSON","response","json","fetchMovieList","fetchMovieDetailsById","movieSagas","rootSaga","endpoint","call","fetch","put","Search","Number","takeEvery","all","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03f8c118.chunk.js","sourcesContent":["export enum APP_CONSTANTS {\n  LOAD_MOVIES_LIST = 'LOAD_MOVIES_LIST',\n  UPDATE_MOVIES_LIST = 'UPDATE_MOVIES_LIST',\n  UPDATE_MOVIES_LIST_PAGINATED = 'UPDATE_MOVIES_LIST_PAGINATED',\n  UPDATE_SEARCH_CRITERIA = 'UPDATE_SEARCH_CRITERIA',\n  LOAD_MOVIES_DETAILS_BY_ID = 'LOAD_MOVIES_DETAILS_BY_ID',\n  UPDATE_MOVIE_DETAILS = 'UPDATE_MOVIE_DETAILS',\n  UPDATE_TOTAL_MOVIES = 'UPDATE_TOTAL_MOVIES',\n  UPDATE_PAGE_NUMBER = 'UPDATE_PAGE_NUMBER',\n  RESET_MOVIE_LIST = 'RESET_MOVIE_LIST',\n}\n","import styled from 'styled-components';\n\nexport const CardWrapper = styled.div`\n  margin: 4px;\n`;\n\nexport const CardContent = styled.div`\n  display: grid;\n  justify-content: center;\n`;\n\nexport const CardPoster = styled.img`\n    width: 100%;\n    max-height: 30vh;\n    vertical-align: middle;\n    cursor: pointer;\n    min-width: 200px;\n    min-height: 200px;\n`;\n\nexport const CardInfoWrapper = styled.div`\n  display: grid;\n  justify-content: center;\n`;\n\nexport const CardInfoLink = styled.a`\n  color: white;\n  cursor: pointer;\n`;\n","import React from 'react';\nimport { MovieQuickInfo } from '../../models/moviesQuery';\nimport {\n  CardContent,\n  CardInfoLink,\n  CardInfoWrapper,\n  CardPoster,\n  CardWrapper,\n} from './card-styled';\n\ntype CardType = {\n  movie: MovieQuickInfo;\n  cardClicked: (movie: MovieQuickInfo) => void;\n};\n\nconst Card: React.FC<CardType> = ({ movie, cardClicked }) => {\n  return (\n    <CardWrapper className=\"movie-card\">\n      <CardContent className=\"card-content white-text\">\n        <CardPoster\n          id={`card-poster-link-${movie.imdbID}`}\n          src={movie.Poster}\n          alt=\"\"\n          onClick={() => cardClicked(movie)}\n        />\n      </CardContent>\n      <CardInfoWrapper className=\"card-action\">\n        <CardInfoLink id={`card-title-link-${movie.imdbID}`} onClick={() => cardClicked(movie)}>\n          {movie.Title} ({movie.Year})\n        </CardInfoLink>\n      </CardInfoWrapper>\n    </CardWrapper>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport './searchbar.css'\n\ntype SearchBarType = {\n  onSearch: (value: string) => void;\n};\n\nexport const SearchBar: React.FC<SearchBarType> = ({ onSearch }) => {\n  const [value, setValue] = React.useState<string>('');\n\n  const handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      onSearch(value.trim());\n    }\n  };\n\n  return (\n    <div className=\"searchbar-wrapper\">\n      <input\n        className=\"input-wrapper\"\n        id=\"search-input\"\n        type=\"search\"\n        value={value}\n        placeholder=\"enter movie title to search\"\n        onChange={(event) => setValue(String(event.target.value))}\n        onKeyPress={(event) => handleKeyPress(event)}\n      />\n      <button id=\"search-button\" className=\"search-button\" onClick={() => onSearch(value.trim())}>\n        Search\n      </button>\n    </div>\n  );\n};\n","import { MovieDetail } from '../../models/movie';\nimport { MovieQuickInfo } from '../../models/moviesQuery';\nimport { APP_CONSTANTS } from '../constants';\n\nexport function loadMoviesList(\n  searchCriteria: string,\n  page: number,\n  paginatedRequest: boolean\n) {\n  return {\n    type: APP_CONSTANTS.LOAD_MOVIES_LIST,\n    payload: { searchCriteria, page, paginatedRequest },\n  };\n}\n\nexport function updateMoviesList(data: MovieQuickInfo[]) {\n  return {\n    type: APP_CONSTANTS.UPDATE_MOVIES_LIST,\n    payload: data,\n  };\n}\n\nexport function updateMoviesListPaginated(data: MovieQuickInfo[]) {\n  return {\n    type: APP_CONSTANTS.UPDATE_MOVIES_LIST_PAGINATED,\n    payload: data,\n  };\n}\n\nexport function updateSearchCriteria(value: string) {\n  return {\n    type: APP_CONSTANTS.UPDATE_SEARCH_CRITERIA,\n    payload: value,\n  };\n}\n\nexport function loadMovieDetails(id: string) {\n  return {\n    type: APP_CONSTANTS.LOAD_MOVIES_DETAILS_BY_ID,\n    payload: id,\n  };\n}\n\nexport function updateMovieDetail(data: MovieDetail | null) {\n  return {\n    type: APP_CONSTANTS.UPDATE_MOVIE_DETAILS,\n    payload: data,\n  };\n}\n\nexport function updateTotalResult(count: number) {\n  return {\n    type: APP_CONSTANTS.UPDATE_TOTAL_MOVIES,\n    payload: count,\n  };\n}\n\nexport function updatePageNumber(page: number) {\n  return {\n    type: APP_CONSTANTS.UPDATE_PAGE_NUMBER,\n    payload: page,\n  };\n}\n\nexport function resetMovieList() {\n  return {\n    type: APP_CONSTANTS.RESET_MOVIE_LIST,\n  };\n}\n","import styled from 'styled-components';\n\nexport const DetailsWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 40% 60%;\n  max-height: 40vh;\n  overflow: auto;\n`;\n\nexport const SidebarWrapper = styled.aside`\n  grid-column: 1;\n  padding: 10px;\n  background-color: #5899ed;\n`;\n\nexport const ContentWrapper = styled.article`\n  grid-column: 2;\n  padding: 10px;\n`;\n\nexport const ImageWrapper = styled.img`\n  width: 100%;\n  max-height: 40vh;\n  object-fit: cover;\n`;\n\nexport const InfoWrapper = styled.div`\n  margin: 8px 0px;\n`;\n\nexport const InfoContent = styled.span``;\n\nexport const BackIcon = styled.a`\n  background-color: white;\n  border-radius: 2.6rem;\n  border: 0.2rem solid white;\n  cursor: pointer;\n  display: inline-block;\n  font-size: 2rem;\n  height: 2.6rem;\n  line-height: 2.6rem;\n  margin: 0;\n  right: 1.5rem;\n  position: absolute;\n  text-align: center;\n  width: 2.6rem;\n`;\n\nexport const BackIconImg = styled.img`\n  width: 100%;\n`;\n","export default __webpack_public_path__ + \"static/media/close.62372c1d.png\";","import React from 'react';\nimport { MovieDetail } from '../../models/movie';\nimport {\n  ContentWrapper,\n  DetailsWrapper,\n  ImageWrapper,\n  InfoContent,\n  InfoWrapper,\n  SidebarWrapper,\n  BackIcon,\n  BackIconImg\n} from './details-styled';\nimport backIcon from '../../assets/close.png'\n\ntype DetailsPageType = {\n  movie: MovieDetail;\n  closeDetails:() => void\n};\n\nexport const DetailsPage: React.FC<DetailsPageType> = ({ movie, closeDetails }) => {\n  return (\n    <div id=\"movie-info-view\">\n      <div>\n        <ImageWrapper src={movie.Poster} alt=\"\" />\n        <BackIcon>\n          <BackIconImg id={`movie-detail-poster-${movie.imdbID}`} src={backIcon} alt=\"\" onClick={() => closeDetails()}/>\n        </BackIcon>\n      </div>\n\n      <DetailsWrapper>\n        <SidebarWrapper>\n          <h3 id={`movie-title-${movie.imdbID}`}>\n            {movie.Title} ({movie.Year})\n          </h3>\n          <InfoWrapper>\n            Director: <InfoContent>{movie.Director}</InfoContent>\n          </InfoWrapper>\n          <InfoWrapper>\n            Actors: <InfoContent>{movie.Actors}</InfoContent>\n          </InfoWrapper>\n          <InfoWrapper>\n            Writer: <InfoContent>{movie.Writer}</InfoContent>\n          </InfoWrapper>\n          <InfoWrapper>\n            Language: <InfoContent>{movie.Language}</InfoContent>\n          </InfoWrapper>\n          <InfoWrapper>\n            Country: <InfoContent>{movie.Country}</InfoContent>\n          </InfoWrapper>\n          <InfoWrapper>\n            Genre: <InfoContent>{movie.Genre}</InfoContent>\n          </InfoWrapper>\n          <InfoWrapper>\n            Rated: <InfoContent>{movie.Rated}</InfoContent>\n          </InfoWrapper>\n          <InfoWrapper>\n            Released: <InfoContent>{movie.Released}</InfoContent>\n          </InfoWrapper>\n          <InfoWrapper>\n            Runtime: <InfoContent>{movie.Runtime}</InfoContent>\n          </InfoWrapper>\n          <InfoWrapper>\n            Ratings: <InfoContent>{movie.imdbRating}</InfoContent>\n          </InfoWrapper>\n          <InfoWrapper>\n            BoxOffice: <InfoContent>{movie.BoxOffice}</InfoContent>\n          </InfoWrapper>\n          <InfoWrapper>\n            Production: <InfoContent>{movie.Production}</InfoContent>\n          </InfoWrapper>\n          <InfoWrapper>\n            Website: <InfoContent>{movie.Website}</InfoContent>\n          </InfoWrapper>\n        </SidebarWrapper>\n\n        <ContentWrapper>\n          <p>{movie.Plot}</p>\n        </ContentWrapper>\n      </DetailsWrapper>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ScrolableBody = styled.div`\n  height: 75vh;\n  width: 100vw;\n  overflow: auto;\n  display: flex;\n  flex-direction: column;\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Card from '../../components/card';\nimport { SearchBar } from '../../components/searchbar';\nimport {\n  loadMovieDetails,\n  loadMoviesList,\n  resetMovieList,\n  updateMovieDetail,\n  updatePageNumber,\n  updateSearchCriteria,\n} from '../../store/actions';\nimport { DetailsPage } from '../../components/details';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport './home.css';\nimport { AppState } from '../../models/state';\nimport { MovieQuickInfo } from '../../models/moviesQuery';\nimport { MovieDetail } from '../../models/movie';\nimport { ScrolableBody } from './home-styled.components';\n\nfunction Home() {\n  const dispatch = useDispatch();\n\n  const [selectedMovie, setSelectedMovie] = React.useState<any | null>(null);\n\n  const moviesList = useSelector((state: AppState) => state.moviesList);\n  const searchCriteria = useSelector((state: AppState) => state.searchCriteria);\n  const movieDetails = useSelector(\n    (state: AppState) => state.selectedMovieDetails\n  );\n  const pageNumber = useSelector((state: AppState) => state.pageNumber);\n  const totalResults = useSelector((state: AppState) => state.totalResults);\n\n  React.useEffect(() => {\n    if (pageNumber === 1)\n      dispatch(loadMoviesList(searchCriteria, pageNumber, false));\n    else dispatch(loadMoviesList(searchCriteria, pageNumber, true));\n  }, [dispatch, searchCriteria, pageNumber]);\n\n  const displayContent = (): React.ReactChild => {\n    if (moviesList && moviesList.length) {\n      return (\n        <ScrolableBody id=\"scrollableDiv\">\n          <InfiniteScroll\n            dataLength={moviesList.length}\n            next={() => {\n              dispatch(updatePageNumber(pageNumber + 1));\n            }}\n            hasMore={moviesList.length < totalResults}\n            inverse={false}\n            loader={<h4>Loading...</h4>}\n            scrollableTarget=\"scrollableDiv\"\n          >\n            <div className='grid-container'>\n              {moviesList.map((movie: any) => (\n                <Card\n                  movie={movie}\n                  key={movie.imdbID}\n                  cardClicked={(movie: MovieQuickInfo) => {\n                    dispatch(loadMovieDetails(movie.imdbID));\n                    setSelectedMovie(movie);\n                  }}\n                />\n              ))}\n            </div>\n          </InfiniteScroll>\n        </ScrolableBody>\n      );\n    } else {\n      if (searchCriteria === '') {\n        return (\n          <div className=\"empty-page\" id=\"no-search\">\n            Enter Movie Title To Search\n          </div>\n        );\n      } else {\n        return (\n          <div className=\"empty-page\" id=\"invalid-search\">\n            No Results Found\n          </div>\n        );\n      }\n    }\n  };\n\n  const displayMovieDetails = (): React.ReactChild => {\n    return (\n      <DetailsPage\n        movie={movieDetails as MovieDetail}\n        closeDetails={() => {\n          setSelectedMovie(null);\n          dispatch(updateMovieDetail(null));\n        }}\n      />\n    );\n  };\n\n  return (\n    <div className=\"content-wrapper\">\n      <SearchBar\n        onSearch={(value: string) => {\n          setSelectedMovie(null);\n          dispatch(resetMovieList());\n          dispatch(updateSearchCriteria(value));\n        }}\n      />\n      {!selectedMovie && <>{displayContent()}</>}\n      {movieDetails && <div>{displayMovieDetails()}</div>}\n    </div>\n  );\n}\n\nexport default Home;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { AppState } from '../../models/state';\nimport { APP_CONSTANTS } from '../constants';\n\nconst initialState: AppState = {\n  moviesList: [],\n  searchCriteria: '',\n  selectedMovieDetails: null,\n  pageNumber: 1,\n  totalResults: 0,\n};\n\nconst resetMoviesList = (state: AppState): AppState => {\n  return {\n    ...state,\n    moviesList: [],\n    selectedMovieDetails: null,\n    pageNumber: 1,\n    totalResults: 0,\n    searchCriteria: '',\n  };\n};\n\nconst refreshMoviesList = (state: AppState, action: any): AppState => {\n  return {\n    ...state,\n    moviesList: action.payload,\n  };\n};\n\nconst addPagedMovieListData = (state: AppState, action: any): AppState => {\n  const appendedList = state.moviesList.concat(action.payload);\n  return {\n    ...state,\n    moviesList: appendedList,\n  };\n};\n\nconst updateSearchCriteria = (state: AppState, action: any): AppState => {\n  return {\n    ...state,\n    searchCriteria: action.payload,\n  };\n};\n\nconst updateMovieDetails = (state: AppState, action: any): AppState => {\n  return {\n    ...state,\n    selectedMovieDetails: action.payload,\n  };\n};\n\nconst updateTotalResult = (state: AppState, action: any): AppState => {\n  return {\n    ...state,\n    totalResults: action.payload,\n  };\n};\n\nconst updatePageNumber = (state: AppState, action: any): AppState => {\n  return {\n    ...state,\n    pageNumber: action.payload,\n  };\n};\n\nexport default function movieApp(state: AppState = initialState, action: any) {\n  switch (action.type) {\n    case APP_CONSTANTS.UPDATE_MOVIES_LIST:\n      return refreshMoviesList(state, action);\n    case APP_CONSTANTS.UPDATE_MOVIES_LIST_PAGINATED:\n      return addPagedMovieListData(state, action);\n    case APP_CONSTANTS.UPDATE_SEARCH_CRITERIA:\n      return updateSearchCriteria(state, action);\n    case APP_CONSTANTS.UPDATE_MOVIE_DETAILS:\n      return updateMovieDetails(state, action);\n    case APP_CONSTANTS.UPDATE_TOTAL_MOVIES:\n      return updateTotalResult(state, action);\n    case APP_CONSTANTS.UPDATE_PAGE_NUMBER:\n      return updatePageNumber(state, action);\n    case APP_CONSTANTS.RESET_MOVIE_LIST:\n      return resetMoviesList(state);\n    default:\n      return state;\n  }\n}\n","export const extractJSON = (response: any) => {\n  return response.json();\n};\n","import { all, call, put, takeEvery } from 'redux-saga/effects';\nimport { MovieDetail } from '../../models/movie';\nimport { MoviesQuery } from '../../models/moviesQuery';\nimport {\n  updateMovieDetail,\n  updateMoviesList,\n  updateMoviesListPaginated,\n  updateTotalResult,\n} from '../actions';\nimport { APP_CONSTANTS } from '../constants';\nimport { extractJSON } from './utils';\n\nexport function* fetchMovieList(action: any): any {\n  const { searchCriteria, page, paginatedRequest } = action.payload;\n  const endpoint = `https://www.omdbapi.com/?apikey=b9bd48a6&s=${searchCriteria}&type=movie&page=${page}`;\n  try {\n    const response: any = yield call(fetch, endpoint);\n    const data: MoviesQuery = yield extractJSON(response);\n    if (!paginatedRequest) {\n      yield put(updateMoviesList(data?.Search));\n      yield put(updateTotalResult(Number(data?.totalResults)));\n    } else {\n      yield put(updateMoviesListPaginated(data?.Search));\n    }\n  } catch (e) {\n    yield put(updateMoviesList([]));\n    yield put(updateTotalResult(0));\n  }\n}\n\nexport function* fetchMovieDetailsById(action: any): any {\n  const endpoint = `https://www.omdbapi.com/?apikey=b9bd48a6&i=${action.payload}`;\n  const response: any = yield call(fetch, endpoint);\n  const data: MovieDetail = yield extractJSON(response);\n  yield put(updateMovieDetail(data));\n}\n\nexport function* movieSagas() {\n  yield takeEvery(APP_CONSTANTS.LOAD_MOVIES_LIST, fetchMovieList);\n  yield takeEvery(\n    APP_CONSTANTS.LOAD_MOVIES_DETAILS_BY_ID,\n    fetchMovieDetailsById\n  );\n}\n\nexport default function* rootSaga() {\n  yield all([movieSagas()]);\n}\n","import { applyMiddleware, createStore } from \"redux\";\nimport movieApp from \"./reducers\";\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from \"./sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(movieApp, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './pages/home';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <React.StrictMode>\n        <Home />\n      </React.StrictMode>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}