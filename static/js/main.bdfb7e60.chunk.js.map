{"version":3,"sources":["store/constants/index.ts","components/styled-components/card-styled.tsx","components/card/index.tsx","components/searchbar/index.tsx","store/actions/index.ts","components/styled-components/details-styled.tsx","assets/close.png","components/details/index.tsx","pages/home/index.tsx","reportWebVitals.ts","store/reducers/index.ts","store/sagas/index.ts","store/index.ts","index.tsx"],"names":["APP_CONSTANTS","CardWrapper","styled","div","CardContent","CardPoster","img","CardInfoWrapper","CardInfoLink","a","Card","movie","cardClicked","className","id","imdbID","src","Poster","alt","onClick","Title","Year","SearchBar","onSearch","React","useState","value","setValue","type","placeholder","onChange","event","String","target","onKeyPress","key","trim","handleKeyPress","updateMoviesList","data","UPDATE_MOVIES_LIST","payload","updateMovieDetail","UPDATE_MOVIE_DETAILS","DetailsWrapper","SidebarWrapper","aside","ContentWrapper","article","ImageWrapper","InfoWrapper","InfoContent","span","BackIcon","BackIconImg","DetailsPage","closeDetails","backIcon","Director","Actors","Writer","Language","Country","Genre","Rated","Released","Runtime","imdbRating","BoxOffice","Production","Website","Plot","Home","dispatch","useDispatch","selectedMovie","setSelectedMovie","moviesList","useSelector","state","searchCriteria","movieDetails","selectedMovieDetails","useEffect","LOAD_MOVIES_LIST","loadMoviesList","UPDATE_SEARCH_CRITERIA","updateSearchCriteria","length","map","LOAD_MOVIES_DETAILS_BY_ID","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","action","updateMovieDetails","fetchMovieList","fetchMovieDetailsById","movieSagas","rootSaga","endpoint","call","fetch","response","json","movieList","hasOwnProperty","Search","put","takeEvery","all","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdfb7e60.chunk.js","sourcesContent":["export enum APP_CONSTANTS {\n  LOAD_MOVIES_LIST = 'LOAD_MOVIES_LIST',\n  UPDATE_MOVIES_LIST = 'UPDATE_MOVIES_LIST',\n  UPDATE_SEARCH_CRITERIA = 'UPDATE_SEARCH_CRITERIA',\n  LOAD_MOVIES_DETAILS_BY_ID = 'LOAD_MOVIES_DETAILS_BY_ID',\n  UPDATE_MOVIE_DETAILS='UPDATE_MOVIE_DETAILS'\n}\n","import styled from 'styled-components';\n\nexport const CardWrapper = styled.div``;\n\nexport const CardContent = styled.div`\n  display: grid;\n  justify-content: center;\n`;\n\nexport const CardPoster = styled.img`\n    width: 100%;\n    max-height: 30vh;\n    vertical-align: middle;\n    cursor: pointer;\n`;\n\nexport const CardInfoWrapper = styled.div`\n  display: grid;\n  justify-content: center;\n`;\n\nexport const CardInfoLink = styled.a`\n  color: white;\n  cursor: pointer;\n`;\n","import React from 'react';\nimport { MovieQuickInfo } from '../../models/moviesQuery';\nimport {\n  CardContent,\n  CardInfoLink,\n  CardInfoWrapper,\n  CardPoster,\n  CardWrapper,\n} from '../styled-components/card-styled';\n\ntype CardType = {\n  movie: MovieQuickInfo;\n  cardClicked: (movie: MovieQuickInfo) => void;\n};\n\nconst Card: React.FC<CardType> = ({ movie, cardClicked }) => {\n  return (\n    <CardWrapper className=\"movie-card\">\n      <CardContent className=\"card-content white-text\">\n        <CardPoster\n          id={`card-poster-link-${movie.imdbID}`}\n          src={movie.Poster}\n          alt=\"\"\n          onClick={() => cardClicked(movie)}\n        />\n      </CardContent>\n      <CardInfoWrapper className=\"card-action\">\n        <CardInfoLink id={`card-title-link-${movie.imdbID}`} onClick={() => cardClicked(movie)}>\n          {movie.Title} ({movie.Year})\n        </CardInfoLink>\n      </CardInfoWrapper>\n    </CardWrapper>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport './searchbar.css'\n\ntype SearchBarType = {\n  onSearch: (value: string) => void;\n};\n\nexport const SearchBar: React.FC<SearchBarType> = ({ onSearch }) => {\n  const [value, setValue] = React.useState<string>('');\n\n  const handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      onSearch(value.trim());\n    }\n  };\n\n  return (\n    <div className=\"searchbar-wrapper\">\n      <input\n        className=\"input-wrapper\"\n        id=\"search-input\"\n        type=\"search\"\n        value={value}\n        placeholder=\"enter movie title to search\"\n        onChange={(event) => setValue(String(event.target.value))}\n        onKeyPress={(event) => handleKeyPress(event)}\n      />\n      <button id=\"search-button\" className=\"search-button\" onClick={() => onSearch(value.trim())}>\n        Search\n      </button>\n    </div>\n  );\n};\n","import { APP_CONSTANTS } from '../constants';\n\nexport function loadMoviesList(searchCriteria: string) {\n  return {\n    type: APP_CONSTANTS.LOAD_MOVIES_LIST,\n    payload: searchCriteria\n  };\n}\n\nexport function updateMoviesList(data: any) {\n  return {\n    type: APP_CONSTANTS.UPDATE_MOVIES_LIST,\n    payload: data,\n  };\n}\n\nexport function updateSearchCriteria(value: string) {\n  return {\n    type: APP_CONSTANTS.UPDATE_SEARCH_CRITERIA,\n    payload: value,\n  };\n}\n\nexport function loadMovieDetails(id: string) {\n  return {\n    type: APP_CONSTANTS.LOAD_MOVIES_DETAILS_BY_ID,\n    payload: id,\n  };\n}\n\nexport function updateMovieDetail(data: any) {\n  return {\n    type: APP_CONSTANTS.UPDATE_MOVIE_DETAILS,\n    payload: data,\n  };\n}","import styled from 'styled-components';\n\nexport const DetailsWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 30% 70%;\n`;\n\nexport const SidebarWrapper = styled.aside`\n  grid-column: 1;\n  padding: 10px;\n  background-color: #5899ed;\n`;\n\nexport const ContentWrapper = styled.article`\n  grid-column: 2;\n  padding: 10px;\n`;\n\nexport const ImageWrapper = styled.img`\n  width: 100%;\n  max-height: 40vh;\n  object-fit: cover;\n`;\n\nexport const InfoWrapper = styled.div`\n  margin: 8px 0px;\n`;\n\nexport const InfoContent = styled.span``;\n\nexport const BackIcon = styled.a`\n  background-color: white;\n  border-radius: 3.6rem;\n  cursor: pointer;\n  display: inline-block;\n  font-size: 2rem;\n  height: 3.6rem;\n  line-height: 3.6rem;\n  margin: 0;\n  right: 1rem;\n  position: absolute;\n  text-align: center;\n  width: 3.6rem;\n`;\n\nexport const BackIconImg = styled.img`\n  width: 100%;\n`;\n","export default __webpack_public_path__ + \"static/media/close.62372c1d.png\";","import React from 'react';\nimport { MovieDetail } from '../../models/movie';\nimport {\n  ContentWrapper,\n  DetailsWrapper,\n  ImageWrapper,\n  InfoContent,\n  InfoWrapper,\n  SidebarWrapper,\n  BackIcon,\n  BackIconImg\n} from '../styled-components/details-styled';\nimport backIcon from '../../assets/close.png'\n\ntype DetailsPageType = {\n  movie: MovieDetail;\n  closeDetails:() => void\n};\n\nexport const DetailsPage: React.FC<DetailsPageType> = ({ movie, closeDetails }) => {\n  return (\n    <div id=\"movie-info-view\">\n      <div>\n        <ImageWrapper src={movie.Poster} alt=\"\" />\n        <BackIcon>\n          <BackIconImg id={`movie-detail-poster-${movie.imdbID}`} src={backIcon} alt=\"\" onClick={() => closeDetails()}/>\n        </BackIcon>\n      </div>\n\n      <DetailsWrapper>\n        <SidebarWrapper>\n          <h3 id={`movie-title-${movie.imdbID}`}>\n            {movie.Title} ({movie.Year})\n          </h3>\n          <InfoWrapper>\n            Director: <InfoContent>{movie.Director}</InfoContent>\n          </InfoWrapper>\n          <InfoWrapper>\n            Actors: <InfoContent>{movie.Actors}</InfoContent>\n          </InfoWrapper>\n          <InfoWrapper>\n            Writer: <InfoContent>{movie.Writer}</InfoContent>\n          </InfoWrapper>\n          <InfoWrapper>\n            Language: <InfoContent>{movie.Language}</InfoContent>\n          </InfoWrapper>\n          <InfoWrapper>\n            Country: <InfoContent>{movie.Country}</InfoContent>\n          </InfoWrapper>\n          <InfoWrapper>\n            Genre: <InfoContent>{movie.Genre}</InfoContent>\n          </InfoWrapper>\n          <InfoWrapper>\n            Rated: <InfoContent>{movie.Rated}</InfoContent>\n          </InfoWrapper>\n          <InfoWrapper>\n            Released: <InfoContent>{movie.Released}</InfoContent>\n          </InfoWrapper>\n          <InfoWrapper>\n            Runtime: <InfoContent>{movie.Runtime}</InfoContent>\n          </InfoWrapper>\n          <InfoWrapper>\n            Ratings: <InfoContent>{movie.imdbRating}</InfoContent>\n          </InfoWrapper>\n          <InfoWrapper>\n            BoxOffice: <InfoContent>{movie.BoxOffice}</InfoContent>\n          </InfoWrapper>\n          <InfoWrapper>\n            Production: <InfoContent>{movie.Production}</InfoContent>\n          </InfoWrapper>\n          <InfoWrapper>\n            Website: <InfoContent>{movie.Website}</InfoContent>\n          </InfoWrapper>\n        </SidebarWrapper>\n\n        <ContentWrapper>\n          <p>{movie.Plot}</p>\n        </ContentWrapper>\n      </DetailsWrapper>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Card from '../../components/card';\nimport { SearchBar } from '../../components/searchbar';\nimport {\n  loadMovieDetails,\n  loadMoviesList,\n  updateMovieDetail,\n  updateSearchCriteria,\n} from '../../store/actions';\nimport { DetailsPage } from '../../components/details';\nimport './home.css';\n\nfunction Home() {\n  const dispatch = useDispatch();\n\n  const [selectedMovie, setSelectedMovie] = React.useState<any | null>(null);\n\n  const moviesList = useSelector((state: any) => state.moviesList);\n  const searchCriteria = useSelector((state: any) => state.searchCriteria);\n  const movieDetails = useSelector((state: any) => state.selectedMovieDetails);\n\n  React.useEffect(() => {\n    dispatch(loadMoviesList(searchCriteria));\n  }, [dispatch, searchCriteria]);\n\n  const displayContent = (): React.ReactChild => {\n    if (moviesList.length) {\n      return moviesList.map((movie: any) => (\n        <Card\n          movie={movie}\n          key={movie.imdbID}\n          cardClicked={(movie: any) => {\n            dispatch(loadMovieDetails(movie.imdbID));\n            setSelectedMovie(movie);\n          }}\n        />\n      ));\n    } else {\n      if (searchCriteria === '') {\n        return (\n          <div className=\"empty-page\" id=\"no-search\">\n            Enter Movie Title To Search\n          </div>\n        );\n      } else {\n        return (\n          <div className=\"empty-page\" id=\"invalid-search\">\n            No Results Found\n          </div>\n        );\n      }\n    }\n  };\n\n  const displayMovieDetails = (): React.ReactChild => {\n    return (\n      <DetailsPage\n        movie={movieDetails}\n        closeDetails={() => {\n          setSelectedMovie(null);\n          dispatch(updateMovieDetail(null));\n        }}\n      />\n    );\n  };\n\n  return (\n    <div className=\"content-wrapper\">\n      <SearchBar\n        onSearch={(value: string) => {\n          setSelectedMovie(null);\n          dispatch(updateMovieDetail(null));\n          dispatch(updateSearchCriteria(value));\n        }}\n      />\n      {!selectedMovie && (\n        <div className={moviesList.length ? 'grid-container' : ''}>{displayContent()}</div>\n      )}\n      {movieDetails && <div>{displayMovieDetails()}</div>}\n    </div>\n  );\n}\n\nexport default Home;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { AppState } from '../../models/state';\nimport { APP_CONSTANTS } from '../constants';\n\nconst initialState: AppState = {\n  moviesList: [],\n  searchCriteria: '',\n  selectedMovieDetails: null,\n};\n\nconst updateMoviesList = (state: AppState, action: any): AppState => {\n  return {\n    ...state,\n    moviesList: action.payload,\n  };\n};\n\nconst updateSearchCriteria = (state: AppState, action: any): AppState => {\n  return {\n    ...state,\n    searchCriteria: action.payload,\n  };\n};\n\nconst updateMovieDetails = (state: AppState, action: any): AppState => {\n  return {\n    ...state,\n    selectedMovieDetails: action.payload,\n  };\n};\n\nexport default function toDoApp(state: AppState = initialState, action: any) {\n  switch (action.type) {\n    case APP_CONSTANTS.UPDATE_MOVIES_LIST:\n      return updateMoviesList(state, action);\n    case APP_CONSTANTS.UPDATE_SEARCH_CRITERIA:\n      return updateSearchCriteria(state, action);\n    case APP_CONSTANTS.UPDATE_MOVIE_DETAILS:\n      return updateMovieDetails(state, action);\n    default:\n      return state;\n  }\n}\n","import { all, call, put, takeEvery } from 'redux-saga/effects';\nimport { MovieDetail } from '../../models/movie';\nimport { MovieQuickInfo, MoviesQuery } from '../../models/moviesQuery';\nimport { updateMovieDetail, updateMoviesList } from '../actions';\nimport { APP_CONSTANTS } from '../constants';\n\nexport function* fetchMovieList(action: any): any {\n  const endpoint = `http://www.omdbapi.com/?apikey=b9bd48a6&s=${action.payload}&type=movie`\n  const response: any = yield call(fetch, endpoint);\n  const data: MoviesQuery = yield response.json();\n  const movieList: MovieQuickInfo[] = data.hasOwnProperty('Search') ? data.Search : []\n  yield put(updateMoviesList(movieList));\n}\n\nexport function* fetchMovieDetailsById(action: any): any {\n  const endpoint = `http://www.omdbapi.com/?apikey=b9bd48a6&i=${action.payload}`\n  const response: any = yield call(fetch, endpoint);\n  const data: MovieDetail = yield response.json();\n  yield put(updateMovieDetail(data));\n}\n\nexport function* movieSagas() {\n  yield takeEvery(APP_CONSTANTS.LOAD_MOVIES_LIST, fetchMovieList);\n  yield takeEvery(APP_CONSTANTS.LOAD_MOVIES_DETAILS_BY_ID, fetchMovieDetailsById);\n}\n\nexport default function* rootSaga() {\n  yield all([movieSagas()]);\n}\n","import { applyMiddleware, createStore } from \"redux\";\nimport toDoApp from \"./reducers\";\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from \"./sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(toDoApp, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './pages/home';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <React.StrictMode>\n        <Home />\n      </React.StrictMode>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}